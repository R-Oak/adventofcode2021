# taken from the output of part1
distances = [
  [0, 0, 0],
  [48, 24, 1236],
  [-1111, 7, 1260],
  [-2327, 187, 1231],
  [53, -1135, 150],
  [-3687, 44, 1184],
  [-1177, 2, 72],
  [65, 158, -1138],
  [-1134, 1273, 1212],
  [1105, 18, -1070],
  [-1169, 1270, 54],
  [-3638, 1215, 1196],
  [81, 187, -2426],
  [56, -1146, 1291],
  [1241, 135, 1231],
  [-4845, 1199, 1175],
  [-95, 1211, 1289],
  [-3524, 0, 2360],
  [31, -1102, 2545],
  [-93, 1387, -2307],
  [-2347, 1214, 1158],
  [-1306, 169, -2358],
  [-1279, 1199, 2383],
  [1250, 1, -2322],
  [2489, 134, 1292],
  [-2441, 1193, 2417],
  [-3619, 1377, 118],
  [-2451, 2494, 1205],
  [-2410, 1215, 3673],
  [1242, -1058, 1199],
  [-12, -2286, 2381],
  [-1172, 153, -3530],
  [2483, 66, -2],
  [1099, -1070, -2439],
  [-2353, 113, -3622]
].combination(2).map do |p1, p2|
  (p1[0] - p2[0]).abs + 
  (p1[1] - p2[1]).abs + 
  (p1[2] - p2[2]).abs
end

print distances.max, "\n"
